<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.reflection</groupId>
	<artifactId>salesdatagather</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SalesDataGather</name>
	<description>Sales Data Gather App</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<timestamp>${maven.build.timestamp}</timestamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<google.client.api.version>1.20.0</google.client.api.version>
		<google.client.api.taskqueue.version>v1beta2-rev38-1.20.0</google.client.api.taskqueue.version>
		<google.client.api.storage.version>v1-rev38-1.20.0</google.client.api.storage.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>${google.client.api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client-java6</artifactId>
			<version>${google.client.api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.oauth-client</groupId>
			<artifactId>google-oauth-client-jetty</artifactId>
			<version>${google.client.api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-taskqueue</artifactId>
			<version>${google.client.api.taskqueue.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-storage</artifactId>
			<version>${google.client.api.storage.version}</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.45.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-compiler-2.1</artifactId>
			<version>2.1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--
				This plugin copies over files from the main resources and for-deployment directories over to the target/deploy directory.
				While coping files over, it performs filtering only on .properties, .sh and .xml files.
			 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources-for-deployment</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deploy</outputDirectory>
							<encoding>UTF-8</encoding>
							<resources>
								<resource>
									<directory>src/main/for-deployment</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.properties</include>
										<include>**/*.sh</include>
										<include>**/*.xml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/for-deployment</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.properties</exclude>
										<exclude>**/*.sh</exclude>
										<exclude>**/*.xml</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.properties</include>
										<include>**/*.sh</include>
										<include>**/*.xml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.properties</exclude>
										<exclude>**/*.sh</exclude>
										<exclude>**/*.xml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
				Spring boot by default creates a FAT jar with all dependencies in it.
				This is normally good but a pain when rsyncing updates frequently to a server.
				So we disable it.
			-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- We want to copy all our dependencies to the deploy/lib folder so we can easily rsync it to the server -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deploy/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--
				We create a jar which includes a class path entry for all our dependencies which will be placed in the lib dir next to the jar.
				Also we want to set the main class so the jar is runnable via java -jar jarname.
				We also add an extra class-path entry for '.' This is very important as it add the current directly to the class path.
				This allows us to put resource files next to the jar which will override the ones in the jar.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/deploy</outputDirectory>
					<archive>
						<manifest>
							<mainClass>io.reflection.salesdatagather.SalesDataGatherApplication</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
	</profiles>

	<scm>
		<url>git@github.com:ReflectionIO/SalesDataGather.git</url>
	</scm>
</project>
